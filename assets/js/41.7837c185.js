(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{521:function(t,v,_){"use strict";_.r(v);var s=_(4),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"图论"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图论"}},[t._v("#")]),t._v(" 图论")]),t._v(" "),_("p",[t._v("图论主要掌握"),_("strong",[t._v("dfs、bfs、flood fill、拓扑排序、最短路、二分图、最小生成树等")]),t._v("算法")]),t._v(" "),_("p",[t._v("图论的题目重点考察"),_("strong",[t._v("建图")])]),t._v(" "),_("p",[t._v("记忆算法的思路，而不是代码")]),t._v(" "),_("h2",{attrs:{id:"图的一些概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图的一些概念"}},[t._v("#")]),t._v(" 图的一些概念")]),t._v(" "),_("ul",[_("li",[t._v("入度，出度")]),t._v(" "),_("li",[t._v("顶点，边，权")]),t._v(" "),_("li",[t._v("环")]),t._v(" "),_("li",[t._v("拓扑排序")]),t._v(" "),_("li",[t._v("最短路")]),t._v(" "),_("li",[t._v("最小生成树")]),t._v(" "),_("li",[t._v("二分图")])]),t._v(" "),_("h2",{attrs:{id:"题目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),_("ul",[_("li",[t._v("LeetCode 997. Find the Town Judge (easy)")])])])}),[],!1,null,null,null);v.default=a.exports}}]);